{"version":3,"sources":["constant/constant.js","Components/axios.js","Components/Banner/Banner.js","Components/NavBar/NavBar.js","Components/RowPost/RowPost.js","Components/urls.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","imageURL","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","Math","floor","random","length","style","backgroundImage","backdrop_path","className","title","overview","NavBar","src","alt","RowPost","props","movies","setMovies","urlId","setUrlId","url","catch","err","alert","map","obj","onClick","id","isSmall","opts","height","width","playerVars","autoplay","videoId","key","original","action","horror","romance","comedy","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d2a2c1.chunk.js","sourcesContent":["export const baseUrl ='https://api.themoviedb.org/3';\r\nexport const API_KEY = 'b6547fb1e843d9bc827cc367e41d756a'\r\nexport const imageURL = 'https://image.tmdb.org/t/p/original'","import axios from \"axios\";\r\nimport { baseUrl } from \"../constant/constant\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl,\r\n    \r\n  });\r\n\r\n  export default instance","import React, { useEffect, useState } from 'react'\r\nimport \"./Banner.css\"\r\nimport instance from '../axios'\r\nimport { API_KEY, imageURL } from '../../constant/constant'\r\n\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState()\r\n    useEffect(() => {\r\n        instance.get(`trending/all/week?api_key=${API_KEY}&language=en-US'`).then((response)=>{\r\n            console.log(response.data.results[0]);\r\n            setMovie(response.data.results[Math.floor(Math.random()*response.data.results.length)])\r\n        })\r\n    }, [])\r\n    return (\r\n\r\n        <div \r\n        style={{backgroundImage:`url(${movie ? imageURL+ movie.backdrop_path : \"\" })`}}\r\n        className=\"banner\">\r\n            <div className=\"content\">\r\n                <h1 className=\"title\">{movie ? movie.title : \"\"}</h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"button\">Play</button>\r\n                    <button className=\"button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"description\">{movie ? movie.overview : \"\"}</h1>\r\n\r\n            </div>\r\n            <div className=\"fade_bottom\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport \"./NavBar.css\"\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix-Logo\" />\r\n            <img className=\"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"Avatar\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport YouTube from 'react-youtube'\r\nimport {  API_KEY, imageURL } from '../../constant/constant'\r\nimport instance from '../axios'\r\nimport \"./RowPost.css\"\r\n\r\nfunction RowPost(props) {\r\n    const [movies,setMovies] = useState([])\r\n    const [urlId,setUrlId] = useState(\"\")\r\n    useEffect(()=>{\r\n        instance.get(props.url).then((response)=>{\r\n            setMovies(response.data.results)\r\n        }).catch(err=>{\r\n            alert('Error')\r\n        })\r\n    },[])\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 0,\r\n        },\r\n      };\r\n      const playMovie =(id)=>{\r\n          console.log(id);\r\n          instance.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((response)=>{\r\n              console.log(response.data);\r\n              setUrlId(response.data.results[0])\r\n          })\r\n      }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"posters\">\r\n                {movies.map((obj)=>\r\n                    <img onClick={()=>playMovie(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'}  src={`${imageURL+obj.backdrop_path}`} alt=\"poster\" />\r\n                )}\r\n                \r\n            </div>\r\n           { urlId && <YouTube opts={opts} videoId={urlId.key}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowPost\r\n","import { API_KEY } from \"../constant/constant\"\r\n\r\n\r\n\r\n\r\nexport const original = `discover/tv?api_key=${API_KEY}&with_networks=213`\r\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`\r\nexport const horror = `discover/movie?api_key=${API_KEY}&with_genres=27`\r\nexport const romance = `discover/movie?api_key=${API_KEY}&with_genres=10749`\r\nexport const comedy = `discover/movie?api_key=${API_KEY}&with_genres=35`\r\n","\nimport React from \"react\"\nimport './App.css';\nimport Banner from \"./Components/Banner/Banner\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport RowPost from \"./Components/RowPost/RowPost\";\nimport { original ,action,horror,romance,comedy} from \"./Components/urls\";\n\nfunction App() {\n  \n  \n\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <Banner/>\n      <RowPost url={original} title=\"Netflix Original\"/>\n      <RowPost url={action} title=\"Action\" isSmall/>\n      <RowPost url={horror} title=\"Horror\" isSmall/>\n      <RowPost url={romance} title=\"Romance\" isSmall/>\n      <RowPost url={comedy} title=\"Comedy\" isSmall/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}